// Dependencies
@import "pack/seed-control/_index";
@import "pack/seed-dash/_index";
@import "pack/seed-family/_index";
@import "pack/seed-this/_index";
@import "../mixins/backdrop-styles";

// Config
$seed-input-namespace: "c-Input";
// Import Seed Pack
@import "pack/seed-input/_index";

// Component styles
.c-Input {
  @import "../configs/color";
  @import "../resets/base";
  $block: this();
  $padding: 8px;
  $states: error, success, warning;

  align-items: center;
  background-color: transparent;
  border: none;
  display: flex;
  position: relative;

  // Elements
  &__item {
    position: relative;
    z-index: 1;
  }

  &__field {
    @import "../resets/base";
    appearance: none;
    background-color: transparent;
    border: none;
    color: currentColor;
    display: block;
    position: relative;
    top: -1px; // to normalize and center the <input>
    height: 100%;
    width: 100%;
    z-index: 1;

    &:focus {
      outline: none;
    }

    &::placeholder {
      color: _color(grey, 700);
    }

    @each $state in $states {
      @include parent("#{$block}.is-#{$state}") {
        color: _color(state, $state, color);
      }
    }
  }

  &__prefix,
  &__suffix {
    opacity: 0.3;
    padding-left: 4px;
    padding-right: 4px;

    @include parent("#{$block}--has-value") {
      opacity: 1;
    }
  }

  &__backdrop {
    @include backdrop-styles($block, $states);
  }

  &__helper-label {
    @import "../resets/base";
    padding: 4px 0;

    // States
    @each $state in $states {
      @include parent("#{$block}.is-#{$state} ~ ") {
        color: _color(state, $state, border-color);
      }
    }
  }

  // Resizer
  &__Resizer {
    bottom: 0;
    height: 0;
    left: 0;
    position: absolute;
    right: 0;
    visibility: hidden;
  }



  // Modifiers
  // Multiline: This transforms the <input> into an auto-expanding <textarea>
  &--multiline {
    height: auto;

    #{$block}__field {
      line-height: normal;
      overflow: hidden;
      margin-left: -($padding);
      margin-right: -($padding);
      padding: 0.6em $padding;
      resize: none;
      top: 0; // to match the line-height of <input>
      width: calc(100% + #{ceil($padding * 2)});
    }

    // Adjust field height
    @each $size, $values in $seed-control-sizes {
      &#{$block}--#{$size} {
        #{$block}__field {
          min-height: _get($values, height);
        }
      }
    }
  }

  // Resizable: Applicable to multiline only. Enables resizing of <textarea>.
  &--resizable {
    #{$block}__field {
      resize: vertical;
    }
  }
}
